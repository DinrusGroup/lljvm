LLJVM provides a set of tools and libraries for running comparatively low level
languages (such as C) on the JVM.

Homepage: http://da.vidr.cc/projects/lljvm/

To compile LLJVM, simply call `make` in the project root directory.
LLVM[1] 2.6 must be installed to compile and run LLJVM.


C COMPILER
The LLJVM-CC frontend is a simple script that ties together several components
to compile C source code to a JVM class file. The classpath must contain
jasmin.jar for it to function. For example:

    lljvm-cc foo.c # compile foo.c to foo.class
or
    CLASSPATH=/path/to/jasmin.jar:. lljvm-cc foo.c

Then to run the resulting class file:

    CLASSPATH=/path/to/lljvm.jar:. java foo


BACKEND
The LLJVM Backend transforms LLVM IR into Jasmin assembly code.
It can be invoked by

    lljvm-backend foo.bc > foo.j

The output file should then be linked by the LLJVM Linker (see below), and
assembled into a class file by Jasmin[2]:

    java -jar jasmin.jar foo.j # assemble foo.class


RUNTIME
The LLVJM Runtime contains 4 classes:
- Memory, which provides an emulated virtual memory, allowing pointers to be
  used within the JVM
- Instruction, which emulates several LLVM instructions, providing support
  for, among other things, unsigned arithmetic operations
- System, which provides methods for interacting with the system
- Function, which provides function pointers for methods


LINKER
The LLJVM Linker qualifies references to external methods and fields in Jasmin
assembly code. At the top of the code (before any .method directives), external
references should be specified through the .extern pseudo-directive, such as:

    .extern field foo I
    .extern method bar(I)V

Then the linker can be invoked by

    java -jar lljvm.jar ld LIBRARY... < INPUT.j > OUTPUT.j


For example, the following assembly code

    .extern method cos(D)D
    .extern field NULL I
    ...
    invokestatic cos(D)D
    getstatic NULL I
    CLASSFORMETHOD cos(D)D

linked with the command

    java -jar lljvm.jar ld java.lang.Math lljvm.runtime.Memory

would produce

    ...
    invokestatic java/lang/Math/cos(D)D
    getstatic lljvm/runtime/Memory/NULL I
    ldc "java/lang/Math"


[1] http://llvm.org/
[2] http://jasmin.sf.net/
